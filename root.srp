<?xml version="1.0" encoding="UTF-8"?>
<srp_project>
    <language>C++/Qt</language>
    <name>Socrates' Reference</name>
    <parse_path>src</parse_path>
    <Namespace>
        <Enumeration>
            <__p_class>0</__p_class>
            <__p_description>Enumerates all versions of this application, excluding revisions.</__p_description>
            <__p_name>Version</__p_name>
        </Enumeration>
        <Namespace>
            <__p_description>This contains all block classes and namespaces.

See the abstract block class for a detailed description of blocks.</__p_description>
            <__p_name>Block</__p_name>
            <Class>
                <__p_description>This is an abstract class. It is a single element, or block, of source code for a language.

A block represents an atomic element of a programming language such as a variable, function, or class. Blocks can contain any number of children and have only one parent. The only block that does not have a parent is the root block of a project. One and only one special block type must be assigned as the root block type for each implemented language. Blocks form tree relationships such as a variable block being the child of a function making it an argument of the function or a function being a child of a class making it a method of the class.

Its properties are meta, display text, display icon, and scope. Meta, display text, and display icon are self-explanatory.

The scope is a that must be unique among all other blocks that share a common root block making up a project. The scope cannot contain non printable characters such as new lines. The root block of a project must have a scope of &quot;ROOT&quot;.

A block can only have children blocks of any type in its meta's allow list property.</__p_description>
                <__p_name>Abstract</__p_name>
                <__p_parents>public QObject</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Constructs this new block with the given meta and parent. The given meta must be valid and cannot be destroyed during the life of this block instance.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The meta.</__p_description>
                        <__p_name>meta</__p_name>
                        <__p_type>Model::Meta::Block*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Signals</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Signals this block's display icon property has changed to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>displayIconChanged</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QIcon&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Signals</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Signals this block's display text property has changed to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>displayTextChanged</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Appends the given block to this block's list of block children. This block takes ownership of the given block. The given block must be valid, its meta index in this block's meta allow list, and not already a child of this block.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>append</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The block.</__p_description>
                        <__p_name>block</__p_name>
                        <__p_type>Block::Abstract*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Creates and returns a block widget for this block with the given parent.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>createWidget</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Widget::Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>descendants</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>A complete list of all descendant blocks contained in this block.</__p_returnDescription>
                    <__p_returnType>QList&lt;Block::Abstract*&gt;</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>displayIcon</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This block's display icon property.</__p_returnDescription>
                    <__p_returnType>QIcon</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>displayText</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This block's display text property.</__p_returnDescription>
                    <__p_returnType>QString</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Creates and returns a new root block and all its children located in the given directory path with the given language, format version, and parent. The given language must be valid.

It is expected the given directory contains a valid multi-file project with the root block file named &quot;ROOT.srb&quot;.

A read block or file system exception is thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>fromDir</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>1</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The language.</__p_description>
                        <__p_name>language</__p_name>
                        <__p_type>Language::Abstract*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The format version.</__p_description>
                        <__p_name>version</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The directory path.</__p_description>
                        <__p_name>path</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Creates and returns a new block and all its children with the given language, format version, XML reader, and parent. The given language must be valid.

A read block exception is thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>fromXml</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>1</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The language.</__p_description>
                        <__p_name>language</__p_name>
                        <__p_type>Language::Abstract*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The format version.</__p_description>
                        <__p_name>version</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The XML reader.</__p_description>
                        <__p_name>xml</__p_name>
                        <__p_type>QXmlStreamReader&amp;</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns this block's child block at the given index. The given index must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>get</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns the index of the given block assuming it is a child of this block. If the given block is not a child of this block then -1 is returned.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>indexOf</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The block.</__p_description>
                        <__p_name>block</__p_name>
                        <__p_type>Block::Abstract*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Inserts the given block to this block's list of block children at the given index. This block takes ownership of the given block. The given block must be valid, its meta index in this block's meta allow list, and not already a child of this block.

The given index can go beyond the bounds of this block's children list. If it is less than 0 then it is inserted at the beginning. If it is greater or equal to the children list size then it is appended to the end.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>insert</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The block.</__p_description>
                        <__p_name>block</__p_name>
                        <__p_type>Block::Abstract*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Sets this block's data from the given mapping using the given format version, overwriting any data contained in this block.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>loadFromMap</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_description>The mapping.</__p_description>
                        <__p_name>map</__p_name>
                        <__p_type>const QMap&lt;QString,QVariant&gt;&amp;</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The XML format version.</__p_description>
                        <__p_name>version</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>meta</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This block's meta property.</__p_returnDescription>
                    <__p_returnType>Model::Meta::Block*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Moves this block's child at the given from index to the given to index. The given from and to indexes must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>move</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The from index.</__p_description>
                        <__p_name>from</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The to index.</__p_description>
                        <__p_name>to</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Saves this blocks data to a returned mapping.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>saveToMap</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>QMap&lt;QString,QVariant&gt;</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>scope</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This instance's scope property.</__p_returnDescription>
                    <__p_returnType>QString</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>size</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This block's total number of children blocks.</__p_returnDescription>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Takes this block's child block at the given index, removing it from this block's list of children and returning it. This also sets the returned block's parent to null. The given index must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>take</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Writes this block and all its children to the given directory path using the most current format version of the multi-file system. This must be a root block.

Any SRB files that do not match any of this root block's and its descendant's SRB files are removed from the file system within the given directory.

A logical block or file system exception is thrown if an error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>toDir</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The directory path.</__p_description>
                        <__p_name>path</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Writes this block and all its children to the given XML writer using the most current XML format version.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>toXml</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The XML writer.</__p_description>
                        <__p_name>xml</__p_name>
                        <__p_type>QXmlStreamWriter&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Protected</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Called right after this block has been added as a child to its new parent block.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>addEvent</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Protected</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Called right before it is removed as a child from its current parent block.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>removeEvent</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private Slots</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Called when one of this block's child block's destroyed signal is emitted.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>onChildDestroyed</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>object</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private Slots</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Called when this block's meta block model's destroyed signal is emitted.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>onMetaDestroyed</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>object</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Creates and returns a new block and all its children located at the given path with the given language, format version, and parent. The given language must be valid.

The new block's children are expected to reside in the same directory as the new block's file's directory.

A read block or file system exception is thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>read</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>1</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The language.</__p_description>
                        <__p_name>language</__p_name>
                        <__p_type>Language::Abstract*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The format version.</__p_description>
                        <__p_name>version</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_description>The path.</__p_description>
                        <__p_name>path</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Writes this block's data and children scope links to the SRB file at the given path.

A file system exception is thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>write</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The path.</__p_description>
                        <__p_name>path</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
            </Class>
            <Namespace>
                <__p_description>This contains all C++ block enumerations and classes.</__p_description>
                <__p_name>Cpp</__p_name>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates all access types for C++ blocks whose parent is a class block.</__p_description>
                    <__p_name>Access</__p_name>
                </Enumeration>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates all function flags for C++ function blocks. Each flag takes one bit of an integer. To expand this enumeration it must use unused bits to the left starting with the user function flag bit.</__p_description>
                    <__p_name>FunctionFlags</__p_name>
                </Enumeration>
                <Enumeration>
                    <__p_class>1</__p_class>
                    <__p_description>Enumerates all function types for C++ function blocks.</__p_description>
                    <__p_name>FunctionType</__p_name>
                </Enumeration>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates all C++ block implementations' indexes.</__p_description>
                    <__p_name>Index</__p_name>
                </Enumeration>
                <Class>
                    <__p_description>This is a C++ block class. It partially implements the abstract block class. It represents a base block for C++ with properties all C++ blocks share.

Its properties are name, description, and scope name. Name and description are self-explanatory.

The scope name is used to construct a C++ block's scope. Each scope name of a block and it's parents are combined with &quot;::&quot; as their separator. If a scope name is a null string then it is ignored and not combined with the other scope names. The root namespace block's name scope must be null.</__p_description>
                    <__p_name>Base</__p_name>
                    <__p_parents>public Block::Abstract</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Signals</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Signals this block's description property has changed to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>descriptionChanged</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Signals</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Signals this block's name property has changed to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>nameChanged</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayText</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QString</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>description</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's description property.</__p_returnDescription>
                        <__p_returnType>const QString&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>name</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's name property.</__p_returnDescription>
                        <__p_returnType>const QString&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>loadFromMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_name>map</__p_name>
                            <__p_type>const QMap&lt;QString,QVariant&gt;&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_name>version</__p_name>
                            <__p_type>int</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>saveToMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QMap&lt;QString,QVariant&gt;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>scope</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QString</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Sets this block's description property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setDescription</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Sets this block's name property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setName</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Protected</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Called when this block's name property has changed to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>onNameChanged</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Protected</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>scopeName</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This instance's scope name property.</__p_returnDescription>
                        <__p_returnType>QString</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                </Class>
                <Class>
                    <__p_description>This is a C++ block class. It represents a C++ class.

Its properties are parents and templates. The parents is a list of a class's parent classes. The templates list is a list of template arguments for a class.</__p_description>
                    <__p_name>Class</__p_name>
                    <__p_parents>public Block::Cpp::Base</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Signals</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Signals this block's parents property has changed to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>parentsChanged</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QStringList&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Signals</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Signals this block's templates property has changed to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>templatesChanged</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QStringList&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createWidget</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>Widget::Block::Abstract*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_name>parent</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayIcon</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QIcon</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>loadFromMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_name>map</__p_name>
                            <__p_type>const QMap&lt;QString,QVariant&gt;&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_name>version</__p_name>
                            <__p_type>int</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>parents</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's parents property.</__p_returnDescription>
                        <__p_returnType>const QStringList&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>saveToMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QMap&lt;QString,QVariant&gt;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Sets this block's parents property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setParents</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QStringList&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Set this block's templates property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setTemplates</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QStringList&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>templates</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's templates property.</__p_returnDescription>
                        <__p_returnType>const QStringList&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
                <Class>
                    <__p_description>This is a C++ block class. It represents a C++ enumeration.

Its single property is class. It is self-explanatory.</__p_description>
                    <__p_name>Enumeration</__p_name>
                    <__p_parents>public Block::Cpp::Base</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Signals</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Signals this block's class property has changed to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>classChanged</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>bool</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createWidget</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>Widget::Block::Abstract*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_name>parent</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayIcon</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QIcon</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>isClass</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's class property.</__p_returnDescription>
                        <__p_returnType>bool</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>loadFromMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_name>map</__p_name>
                            <__p_type>const QMap&lt;QString,QVariant&gt;&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_name>version</__p_name>
                            <__p_type>int</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>saveToMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QMap&lt;QString,QVariant&gt;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Sets this block's class property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setClass</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>bool</__p_type>
                        </Variable>
                    </Function>
                </Class>
                <Class>
                    <__p_description>This is a C++ block class. It represents a C++ namespace.</__p_description>
                    <__p_name>Namespace</__p_name>
                    <__p_parents>public Block::Cpp::Base</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createWidget</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>Widget::Block::Abstract*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_name>parent</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayIcon</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QIcon</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                </Class>
            </Namespace>
            <Namespace>
                <__p_description>This contains all C++/Qt block enumerations and classes.</__p_description>
                <__p_name>CppQt</__p_name>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates additional access types for Qt signals and slots.</__p_description>
                    <__p_name>Access</__p_name>
                </Enumeration>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates additional function flags for Qt methods.</__p_description>
                    <__p_name>FunctionFlags</__p_name>
                </Enumeration>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates all C++/Qt block implementations' indexes.</__p_description>
                    <__p_name>Index</__p_name>
                </Enumeration>
            </Namespace>
            <Namespace>
                <__p_description>This contains all test block enumerations and classes.</__p_description>
                <__p_name>Test</__p_name>
                <Enumeration>
                    <__p_class>0</__p_class>
                    <__p_description>Enumerates all test block implementations' indexes.</__p_description>
                    <__p_name>Index</__p_name>
                </Enumeration>
                <Class>
                    <__p_description>This is a test block class. It represents no real language component or object, instead being used by this application's test system.

Its single property is name. The name is self-explanatory.

Nodes have an add and remove count. This keeps track of how many times the add and remove events have been called by its parent abstract block class.

The display icon property can be set with an appropriate setter method so it can be unit tested with abstract block.</__p_description>
                    <__p_name>Node</__p_name>
                    <__p_parents>public Block::Abstract</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>~^</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>addCount</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This node's add count.</__p_returnDescription>
                        <__p_returnType>int</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createWidget</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>Widget::Block::Abstract*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_name>parent</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayIcon</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QIcon</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayText</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QString</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>name</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's name property.</__p_returnDescription>
                        <__p_returnType>const QString&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>loadFromMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                        <Variable>
                            <__p_name>map</__p_name>
                            <__p_type>const QMap&lt;QString,QVariant&gt;&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_name>version</__p_name>
                            <__p_type>int</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>removeCount</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This node's remove count.</__p_returnDescription>
                        <__p_returnType>int</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Resets this node's add count to 0.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>resetAdd</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Resets this node's remove count to 0.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>resetRemove</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>saveToMap</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QMap&lt;QString,QVariant&gt;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>1</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>scope</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>QString</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Sets this instance's display icon property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setIcon</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>icon</__p_name>
                            <__p_type>const QIcon&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Sets this block's name property to the given value.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>setName</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The value.</__p_description>
                            <__p_name>value</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Protected</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>addEvent</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Protected</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>removeEvent</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>1</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                </Class>
            </Namespace>
        </Namespace>
        <Namespace>
            <__p_description>This contains all exception classes and namespaces.

All specific exceptions inherit the base exception class.</__p_description>
            <__p_name>Exception</__p_name>
            <Class>
                <__p_description>This is a base class. It it an exception representing an error. The type of error is determined by the specific exception class which inherits it.

Its single property is message. The message provides a detailed description of an exception's error.</__p_description>
                <__p_name>Base</__p_name>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Constructs this new exception with the given message.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The message.</__p_description>
                        <__p_name>message</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>message</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This instance's message property.</__p_returnDescription>
                    <__p_returnType>const QString&amp;</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
            </Class>
            <Namespace>
                <__p_description>This contains all block exception classes.</__p_description>
                <__p_name>Block</__p_name>
                <Class>
                    <__p_description>This is an exception class. It represents a logical block error.</__p_description>
                    <__p_name>Logical</__p_name>
                    <__p_parents>public Exception::Base</__p_parents>
                </Class>
                <Class>
                    <__p_description>This is an exception class. It represents a block reading error.</__p_description>
                    <__p_name>Read</__p_name>
                    <__p_parents>public Exception::Base</__p_parents>
                </Class>
            </Namespace>
            <Namespace>
                <__p_description>This contains all project exception classes.</__p_description>
                <__p_name>Project</__p_name>
                <Class>
                    <__p_description>This is an exception class. It represents a project reading error.</__p_description>
                    <__p_name>Read</__p_name>
                    <__p_parents>public Exception::Base</__p_parents>
                </Class>
            </Namespace>
            <Namespace>
                <__p_description>This contains all system exception classes.</__p_description>
                <__p_name>System</__p_name>
                <Class>
                    <__p_description>This is an exception class. It represents a file system error.</__p_description>
                    <__p_name>File</__p_name>
                    <__p_parents>public Exception::Base</__p_parents>
                </Class>
            </Namespace>
        </Namespace>
        <Namespace>
            <__p_description>This contains all factory classes.</__p_description>
            <__p_name>Factory</__p_name>
            <Class>
                <__p_description>This is a factory class. It is a singleton class. It creates abstract language implementations.</__p_description>
                <__p_name>Language</__p_name>
                <__p_parents>public QObject</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns this factory's language with the given index and parent. The given index must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>get</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>::Language::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns this factory's language index with the given meta name. If there is no such language with the given meta name then -1 is returned.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>indexFromName</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The name.</__p_description>
                        <__p_name>name</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>instance</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>The singleton instance of this class.</__p_returnDescription>
                    <__p_returnType>Factory::Language*</__p_returnType>
                    <__p_static>1</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns this factory's language's meta at the given index. The given index must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>meta</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Model::Meta::Language*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>size</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This factory's total number of language implementations.</__p_returnDescription>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Appends the given language to this factory's list of languages. The given language must be valid and its meta name must be unique among all other language meta names in this factory. This factory takes ownership of the given language.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>appendLanguage</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The language.</__p_description>
                        <__p_name>language</__p_name>
                        <__p_type>::Language::Abstract*</__p_type>
                    </Variable>
                </Function>
            </Class>
        </Namespace>
        <Namespace>
            <__p_description>This contains all language classes.

See the abstract language class for a detailed description of languages.</__p_description>
            <__p_name>Language</__p_name>
            <Class>
                <__p_description>This is an abstract class. It is a language implementation and block factory for its implemented language. A language in this application is synonymous with a programming language, such as C++ or Python for example.

Its properties are meta and root index. Meta is self-explanatory. Root index is a language's root block's index.</__p_description>
                <__p_name>Abstract</__p_name>
                <__p_parents>public QObject</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Constructs this new language with the given meta and parent. The given meta must be valid and cannot be destroyed during the life of this language instance.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The meta.</__p_description>
                        <__p_name>meta</__p_name>
                        <__p_type>Model::Meta::Language*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns this language's block's meta at the given index. The given index must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>blockMeta</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Model::Meta::Block*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Creates and returns a new block of this language with the given index and parent. The given index must be valid.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>create</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_description>The index.</__p_description>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Returns this language's block index with the given meta name. If there is no such block with the given meta name then -1 is returned.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>indexFromName</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The name.</__p_description>
                        <__p_name>name</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>meta</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This language's meta property.</__p_returnDescription>
                    <__p_returnType>Model::Meta::Language*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>1</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>rootIndex</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This language's root index property.</__p_returnDescription>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>size</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This language's total number of block implementations.</__p_returnDescription>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Protected</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Appends the given block meta to this language's list of block meta. This language takes ownership of the given meta. This language's create interface implementation must match the order generated from calling this method in regard to block indexes.

 The given meta must be valid. Its name must be unique among all other block meta in this language. Its name cannot be an empty string. Its name cannot begin with an underscore character.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>appendBlock</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The block meta.</__p_description>
                        <__p_name>meta</__p_name>
                        <__p_type>Model::Meta::Block*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private Slots</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Called when this language's meta's destroyed signal is emitted.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>onMetaDestroyed</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>object</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
            </Class>
            <Class>
                <__p_description>This is a language class. It implements the C++ language.</__p_description>
                <__p_name>Cpp</__p_name>
                <__p_parents>public Language::Abstract</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>meta</__p_name>
                        <__p_type>Model::Meta::Language*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>create</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>rootIndex</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
            </Class>
            <Class>
                <__p_description>This is a language class. It implements the C++/Qt language.</__p_description>
                <__p_name>CppQt</__p_name>
                <__p_parents>public Language::Abstract</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>meta</__p_name>
                        <__p_type>Model::Meta::Language*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>create</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>rootIndex</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
            </Class>
            <Class>
                <__p_description>This is a language class. It implements a test language.</__p_description>
                <__p_name>Test</__p_name>
                <__p_parents>public Language::Abstract</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>meta</__p_name>
                        <__p_type>Model::Meta::Language*</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>create</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>Block::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_name>index</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>rootIndex</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                </Function>
            </Class>
        </Namespace>
        <Namespace>
            <__p_description>This contains all model classes and namespaces.</__p_description>
            <__p_name>Model</__p_name>
            <Namespace>
                <__p_description>This contains all meta model classes.</__p_description>
                <__p_name>Meta</__p_name>
                <Class>
                    <__p_description>This is a meta model class. It represents the meta information for a block implementation.

Its properties are language, index, and allow list. The language is the meta information a meta block's language implementation. The index is the index used for creating a meta's block from its language. The allow list is a set of block indexes that a meta's block is allowed to have as children blocks.</__p_description>
                    <__p_name>Block</__p_name>
                    <__p_parents>public Model::Meta::Language</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Constructs this new model with the given language, index, name, label, allow list, and parent. The given language must be valid and cannot be destroyed during the life of this model.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>^</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The language.</__p_description>
                            <__p_name>language</__p_name>
                            <__p_type>Model::Meta::Language*</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The index.</__p_description>
                            <__p_name>index</__p_name>
                            <__p_type>int</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The name.</__p_description>
                            <__p_name>name</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The label.</__p_description>
                            <__p_name>label</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The allow list.</__p_description>
                            <__p_name>allowList</__p_name>
                            <__p_type>const QSet&lt;int&gt;&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_description>The parent.</__p_description>
                            <__p_name>parent</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>allowList</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's allow list property.</__p_returnDescription>
                        <__p_returnType>const QSet&lt;int&gt;&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>index</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This block's index property.</__p_returnDescription>
                        <__p_returnType>int</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>language</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This model's language property.</__p_returnDescription>
                        <__p_returnType>Model::Meta::Language*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Called when this model's language's destroyed signal is emitted.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>onLanguageDestroyed</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_name>object</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                </Class>
                <Class>
                    <__p_description>This is a meta model class. It represents the meta information for a language implementation.

Its properties are name and label. The name is the machine name and the label is the user visible name.</__p_description>
                    <__p_name>Language</__p_name>
                    <__p_parents>public QObject</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Constructs this new model with the given name, label, and parent.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>^</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The name.</__p_description>
                            <__p_name>name</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The label.</__p_description>
                            <__p_name>label</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_description>The parent.</__p_description>
                            <__p_name>parent</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>label</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This model's label property.</__p_returnDescription>
                        <__p_returnType>const QString&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>name</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This model's name property.</__p_returnDescription>
                        <__p_returnType>const QString&amp;</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
            </Namespace>
            <Class>
                <__p_description>This is a model class. It represents a Socrates' Reference project.

Its properties are language, name, directory path, and parse path. The language and name are self-explanatory. The directory path is where a project's save file is located. The parse path is the path, relative to the location of a project's directory path, where a project's source code is contained.</__p_description>
                <__p_name>Project</__p_name>
                <__p_parents>public QAbstractItemModel</__p_parents>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Constructs this new model with the given path and parent. This model loads its contents from the XML file at the given path.

A read project or file system exception are thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>^</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The path.</__p_description>
                        <__p_name>path</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>nullptr</__p_assignment>
                        <__p_description>The parent.</__p_description>
                        <__p_name>parent</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Signals</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Signals this model's directory path property has changed to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>directoryPathChanged</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Signals</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Signals this model's name property has changed to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>nameChanged</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Signals</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Signals this model's parse path property has changed to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>parsePathChanged</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>columnCount</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_assignment>QModelIndex()</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>const QModelIndex&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>data</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>QVariant</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_name>index</__p_name>
                        <__p_type>const QModelIndex&amp;</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>Qt::DisplayRole</__p_assignment>
                        <__p_name>role</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>directoryPath</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This model's directory path property.</__p_returnDescription>
                    <__p_returnType>const QString&amp;</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>index</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>QModelIndex</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_name>row</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_name>column</__p_name>
                        <__p_type>int</__p_type>
                    </Variable>
                    <Variable>
                        <__p_assignment>QModelIndex()</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>const QModelIndex&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>language</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This model's language property.</__p_returnDescription>
                    <__p_returnType>Language::Abstract*</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>name</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This model's name property.</__p_returnDescription>
                    <__p_returnType>const QString&amp;</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>parent</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>QModelIndex</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_name>index</__p_name>
                        <__p_type>const QModelIndex&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Getter method.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>parsePath</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnDescription>This model's parse path property.</__p_returnDescription>
                    <__p_returnType>const QString&amp;</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>1</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>1</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>rowCount</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>1</__p_override>
                    <__p_returnType>int</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>1</__p_virtual>
                    <Variable>
                        <__p_assignment>QModelIndex()</__p_assignment>
                        <__p_name>parent</__p_name>
                        <__p_type>const QModelIndex&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Sets this model's directory path property to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>setDirectoryPath</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Sets this model's name property to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>setName</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Public</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Sets this model's parse path property to the given value.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>setParsePath</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The value.</__p_description>
                        <__p_name>value</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private Slots</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Called when this project's language's destroyed signal is emitted.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>onLanguageDestroyed</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_name>object</__p_name>
                        <__p_type>QObject*</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Loads this model from the given path.

A read project or file system exception are thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>read</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The path.</__p_description>
                        <__p_name>path</__p_name>
                        <__p_type>const QString&amp;</__p_type>
                    </Variable>
                </Function>
                <Function>
                    <__p_abstract>0</__p_abstract>
                    <__p_access>Private</__p_access>
                    <__p_const>0</__p_const>
                    <__p_default>0</__p_default>
                    <__p_deleted>0</__p_deleted>
                    <__p_description>Loads this model from the given XML reader, assuming the XML format is legacy.

A read project exception is thrown if any error is encountered.</__p_description>
                    <__p_explicit>0</__p_explicit>
                    <__p_final>0</__p_final>
                    <__p_invokable>0</__p_invokable>
                    <__p_name>readLegacy</__p_name>
                    <__p_noexcept>0</__p_noexcept>
                    <__p_override>0</__p_override>
                    <__p_returnType>void</__p_returnType>
                    <__p_static>0</__p_static>
                    <__p_virtual>0</__p_virtual>
                    <Variable>
                        <__p_description>The XML reader.</__p_description>
                        <__p_name>xml</__p_name>
                        <__p_type>QXmlStreamReader&amp;</__p_type>
                    </Variable>
                </Function>
            </Class>
        </Namespace>
        <Namespace>
            <__p_description>This contains all unit test namespaces and functions.</__p_description>
            <__p_name>Test</__p_name>
            <Namespace>
                <__p_description>This contains all block unit test namespaces.</__p_description>
                <__p_name>Block</__p_name>
                <Class>
                    <__p_description>This is a Qt unit test class. It tests the abstract block class.</__p_description>
                    <__p_name>Abstract</__p_name>
                    <__p_parents>public QObject</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>initTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the append method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>append</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the descendants method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>descendants</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the display icon property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayIconProperty</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the display text property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>displayTextProperty</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the from directory method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>fromDir</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the from XML method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>fromXml</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the from XML method using the legacy format.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>fromXmlLegacy</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the get method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>get</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the index of method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>indexOf</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the insert method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>insert</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the meta property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>metaProperty</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the move method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>move</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the scope property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>scopeProperty</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the size property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>size</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the take method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>take</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the to directory method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>toDir</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the to XML method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>toXml</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>cleanupTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Determines if the given first and second directories are equal. This is determined if the directories contain the same files and all those files are also equal.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>areDirsEqual</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>True if they are equal or false otherwise.</__p_returnDescription>
                        <__p_returnType>bool</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The first directory.</__p_description>
                            <__p_name>dir0</__p_name>
                            <__p_type>const QDir&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The second directory.</__p_description>
                            <__p_name>dir1</__p_name>
                            <__p_type>const QDir&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Determines if the first and second files at the given paths are equal. If either file cannot be opened they are considered to be not equal.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>areFilesEqual</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>True if they are equal or false otherwise.</__p_returnDescription>
                        <__p_returnType>bool</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The first path.</__p_description>
                            <__p_name>path0</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The second path.</__p_description>
                            <__p_name>path1</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Determines if the first and second XML files at the given paths are equal. If either file cannot be opened they are considered to be not equal.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>areXmlFilesEqual</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>True if they are equal or false otherwise.</__p_returnDescription>
                        <__p_returnType>bool</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The first path.</__p_description>
                            <__p_name>path0</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The second path.</__p_description>
                            <__p_name>path1</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Creates and returns a new test node block. The returned block's parent is this unit test instance.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>create</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>::Block::Test::Node*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Creates a test node block file at the given path with the given name and child links. If a file exists at the given path then it is overwritten.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createBlockFile</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>True on success or false otherwise.</__p_returnDescription>
                        <__p_returnType>bool</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The path.</__p_description>
                            <__p_name>path</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The name.</__p_description>
                            <__p_name>name</__p_name>
                            <__p_type>const QString&amp;</__p_type>
                        </Variable>
                        <Variable>
                            <__p_description>The children links.</__p_description>
                            <__p_name>links</__p_name>
                            <__p_type>const QStringList</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Creates the test project directory used for unit testing the from and to directory methods. The root unit testing directory for the abstract block test must exist.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createTestProjectDir</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Creates the test XML file using for unit testing the latest to and from XML methods. The root unit testing directory for the abstract block test must exist.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createTestXml</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Creates the test XML legacy file using for unit testing the latest from XML method using the legacy format. The root unit testing directory for the abstract block test must exist.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createTestXmlLegacy</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>1</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
                <Namespace>
                    <__p_description>This contains all C++ block unit test classes.</__p_description>
                    <__p_name>Cpp</__p_name>
                    <Class>
                        <__p_description>This is a Qt unit test class. It tests the class C++ block class.</__p_description>
                        <__p_name>Class</__p_name>
                        <__p_parents>public QObject</__p_parents>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>initTestCase</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the display icon property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>displayIconProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the load from map interface.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>loadFromMap</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the load from map interface using the legacy version.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>loadFromMapLegacy</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the parents property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>parentsProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the save to map interface.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>saveToMap</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the templates property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>templatesProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>cleanupTestCase</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Creates and returns a new class C++ block. The returned block's parent is this unit test instance.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>create</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>::Block::Cpp::Class*</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                    </Class>
                    <Class>
                        <__p_description>This is a Qt unit test class. It tests the enumeration C++ block class.</__p_description>
                        <__p_name>Enumeration</__p_name>
                        <__p_parents>public QObject</__p_parents>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>initTestCase</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the class property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>classProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the display icon property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>displayIconProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the load from map interface.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>loadFromMap</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the save to map interface.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>saveToMap</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>cleanupTestCase</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Creates and returns a new enumeration C++ block. The returned block's parent is this unit test instance.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>create</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>::Block::Cpp::Enumeration*</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                    </Class>
                    <Class>
                        <__p_description>This is a Qt unit test class. It tests the namespace C++ block class.</__p_description>
                        <__p_name>Namespace</__p_name>
                        <__p_parents>public QObject</__p_parents>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>initTestCase</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the description property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>descriptionProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the display icon property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>displayIconProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the display text property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>displayTextProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the load from map interface.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>loadFromMap</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the name property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>nameProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the save to map interface.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>saveToMap</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Tests the scope property.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>scopeProperty</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private Slots</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>cleanupTestCase</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>void</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                        <Function>
                            <__p_abstract>0</__p_abstract>
                            <__p_access>Private</__p_access>
                            <__p_const>0</__p_const>
                            <__p_default>0</__p_default>
                            <__p_deleted>0</__p_deleted>
                            <__p_description>Creates and returns a new namespace C++ block. The returned block's parent is this unit test instance.</__p_description>
                            <__p_explicit>0</__p_explicit>
                            <__p_final>0</__p_final>
                            <__p_invokable>0</__p_invokable>
                            <__p_name>create</__p_name>
                            <__p_noexcept>0</__p_noexcept>
                            <__p_override>0</__p_override>
                            <__p_returnType>::Block::Cpp::Namespace*</__p_returnType>
                            <__p_static>0</__p_static>
                            <__p_virtual>0</__p_virtual>
                        </Function>
                    </Class>
                </Namespace>
            </Namespace>
            <Namespace>
                <__p_description>This contains all factory unit test classes.</__p_description>
                <__p_name>Factory</__p_name>
                <Class>
                    <__p_description>This is a Qt unit test class. It tests the language factory singleton class.</__p_description>
                    <__p_name>Language</__p_name>
                    <__p_parents>public QObject</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>initTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the get method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>get</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the meta method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>meta</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the size method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>size</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
            </Namespace>
            <Namespace>
                <__p_description>This contains all language unit test classes.</__p_description>
                <__p_name>Language</__p_name>
                <Class>
                    <__p_description>This is a Qt unit test class. It tests the abstract language class by using the test language class.</__p_description>
                    <__p_name>Abstract</__p_name>
                    <__p_parents>public QObject</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>initTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the block meta method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>blockMeta</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the create interface.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>create</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the index from name method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>indexFromName</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the meta property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>metaProperty</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Test the root index property.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>rootIndexProperty</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Test the size method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>size</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>cleanupTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
                <Class>
                    <__p_description>This is a Qt unit test class. It tests the C++ language class.</__p_description>
                    <__p_name>Cpp</__p_name>
                    <__p_parents>public QObject</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>initTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests creation of a class block.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createClass</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests creation of an enumeration block.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createEnumeration</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests creation of a namespace block.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createNamespace</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the root index interface.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>rootIndex</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>cleanupTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
                <Class>
                    <__p_description>This is a Qt unit test class. It tests the C++/Qt language class.</__p_description>
                    <__p_name>CppQt</__p_name>
                    <__p_parents>public QObject</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>initTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests creation of a class block.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createClass</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests creation of an enumeration block.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createEnumeration</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests creation of a namespace block.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>createNamespace</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Tests the root index interface.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>rootIndex</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>cleanupTestCase</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                </Class>
            </Namespace>
            <Namespace>
                <__p_description>This contains all model unit test classes.</__p_description>
                <__p_name>Model</__p_name>
                <Class>
                    <__p_description>This is a Qt unit test class. It tests the project model class.</__p_description>
                    <__p_name>Project</__p_name>
                    <__p_parents>public QObject</__p_parents>
                </Class>
            </Namespace>
            <Function>
                <__p_abstract>0</__p_abstract>
                <__p_access>Public</__p_access>
                <__p_const>0</__p_const>
                <__p_default>0</__p_default>
                <__p_deleted>0</__p_deleted>
                <__p_description>Determines if the given first and second Qt icons are equal. This is done by writing them to a Qt byte array and seeing if the arrays are equal.</__p_description>
                <__p_explicit>0</__p_explicit>
                <__p_final>0</__p_final>
                <__p_invokable>0</__p_invokable>
                <__p_name>areIconsEqual</__p_name>
                <__p_noexcept>0</__p_noexcept>
                <__p_override>0</__p_override>
                <__p_returnDescription>True if they are equal or false otherwise.</__p_returnDescription>
                <__p_returnType>bool</__p_returnType>
                <__p_static>0</__p_static>
                <__p_virtual>0</__p_virtual>
                <Variable>
                    <__p_description>The first icon.</__p_description>
                    <__p_name>icon0</__p_name>
                    <__p_type>const QIcon&amp;</__p_type>
                </Variable>
                <Variable>
                    <__p_description>The second icon.</__p_description>
                    <__p_name>icon1</__p_name>
                    <__p_type>const QIcon&amp;</__p_type>
                </Variable>
            </Function>
            <Function>
                <__p_abstract>0</__p_abstract>
                <__p_access>Public</__p_access>
                <__p_const>0</__p_const>
                <__p_default>0</__p_default>
                <__p_deleted>0</__p_deleted>
                <__p_description>Executes a Qt unit test class for this application, using the given argument count and arguments with the Qt unit test system, excluding the first two.

The first argument is assumed to be &quot;--test&quot;. The second argument is the name of the unit test. If the name of the unit test is not valid or not given then a help message is printed with all available tests. All other arguments are passed to the Qt unit test system.

This must be called after the initialize function is called.</__p_description>
                <__p_explicit>0</__p_explicit>
                <__p_final>0</__p_final>
                <__p_invokable>0</__p_invokable>
                <__p_name>execute</__p_name>
                <__p_noexcept>0</__p_noexcept>
                <__p_override>0</__p_override>
                <__p_returnDescription>The status of unit test execution.</__p_returnDescription>
                <__p_returnType>int</__p_returnType>
                <__p_static>0</__p_static>
                <__p_virtual>0</__p_virtual>
                <Variable>
                    <__p_description>The argument count.</__p_description>
                    <__p_name>argc</__p_name>
                    <__p_type>int</__p_type>
                </Variable>
                <Variable>
                    <__p_description>The arguments.</__p_description>
                    <__p_name>argv</__p_name>
                    <__p_type>char**</__p_type>
                </Variable>
            </Function>
            <Function>
                <__p_abstract>0</__p_abstract>
                <__p_access>Public</__p_access>
                <__p_const>0</__p_const>
                <__p_default>0</__p_default>
                <__p_deleted>0</__p_deleted>
                <__p_description>Executes all Qt unit test classes by calling this application with the test option for each possible test. If the returned status of a test execution is not 0 then this halts test execution and returns the non-zero status.

The given argument count and arguments are passed along to each individual execution of this application, excluding the first test all option.

This must be called after the initialize function is called.</__p_description>
                <__p_explicit>0</__p_explicit>
                <__p_final>0</__p_final>
                <__p_invokable>0</__p_invokable>
                <__p_name>executeAll</__p_name>
                <__p_noexcept>0</__p_noexcept>
                <__p_override>0</__p_override>
                <__p_returnDescription>The status of all executed unit tests.</__p_returnDescription>
                <__p_returnType>int</__p_returnType>
                <__p_static>0</__p_static>
                <__p_virtual>0</__p_virtual>
                <Variable>
                    <__p_description>The argument count.</__p_description>
                    <__p_name>argc</__p_name>
                    <__p_type>int</__p_type>
                </Variable>
                <Variable>
                    <__p_description>The arguments.</__p_description>
                    <__p_name>argv</__p_name>
                    <__p_type>char**</__p_type>
                </Variable>
            </Function>
            <Function>
                <__p_abstract>0</__p_abstract>
                <__p_access>Public</__p_access>
                <__p_const>0</__p_const>
                <__p_default>0</__p_default>
                <__p_deleted>0</__p_deleted>
                <__p_description>Initializes this namespace's internal array of available tests. This must be called before the execute or execute all functions are called.</__p_description>
                <__p_explicit>0</__p_explicit>
                <__p_final>0</__p_final>
                <__p_invokable>0</__p_invokable>
                <__p_name>initialize</__p_name>
                <__p_noexcept>0</__p_noexcept>
                <__p_override>0</__p_override>
                <__p_returnType>void</__p_returnType>
                <__p_static>0</__p_static>
                <__p_virtual>0</__p_virtual>
            </Function>
        </Namespace>
        <Namespace>
            <__p_description>This contains all widget namespaces.</__p_description>
            <__p_name>Widget</__p_name>
            <Namespace>
                <__p_description>This contains all block widget classes.

See the abstract block widget class for a detailed description of block widgets.</__p_description>
                <__p_name>Block</__p_name>
                <Class>
                    <__p_description>This is an abstract widget class. It extends the Qt object class. It exposes a block implementation to the user.</__p_description>
                    <__p_name>Abstract</__p_name>
                    <__p_parents>public QWidget</__p_parents>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Constructs this new widget with the given block implementation and parent. The given block implementation must be valid and cannot be destroyed during the life of this widget instance.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>^</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_description>The block implementation.</__p_description>
                            <__p_name>block</__p_name>
                            <__p_type>::Block::Abstract*</__p_type>
                        </Variable>
                        <Variable>
                            <__p_assignment>nullptr</__p_assignment>
                            <__p_description>The parent.</__p_description>
                            <__p_name>parent</__p_name>
                            <__p_type>QWidget*</__p_type>
                        </Variable>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Getter method.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>block</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnDescription>This widget's block.</__p_returnDescription>
                        <__p_returnType>::Block::Abstract*</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>1</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Applies any modifications in this widget made by the user to its block implementation.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>applyModifications</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>1</__p_abstract>
                        <__p_access>Public</__p_access>
                        <__p_const>1</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Returns true if this widget has modifications not applied to its block implementation or false otherwise.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>hasModifications</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>bool</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>1</__p_virtual>
                    </Function>
                    <Function>
                        <__p_abstract>0</__p_abstract>
                        <__p_access>Private Slots</__p_access>
                        <__p_const>0</__p_const>
                        <__p_default>0</__p_default>
                        <__p_deleted>0</__p_deleted>
                        <__p_description>Called when this widget's block's destroyed signal is emitted.</__p_description>
                        <__p_explicit>0</__p_explicit>
                        <__p_final>0</__p_final>
                        <__p_invokable>0</__p_invokable>
                        <__p_name>onBlockDestroyed</__p_name>
                        <__p_noexcept>0</__p_noexcept>
                        <__p_override>0</__p_override>
                        <__p_returnType>void</__p_returnType>
                        <__p_static>0</__p_static>
                        <__p_virtual>0</__p_virtual>
                        <Variable>
                            <__p_name>object</__p_name>
                            <__p_type>QObject*</__p_type>
                        </Variable>
                    </Function>
                </Class>
            </Namespace>
        </Namespace>
        <Function>
            <__p_abstract>0</__p_abstract>
            <__p_access>Public</__p_access>
            <__p_const>0</__p_const>
            <__p_default>0</__p_default>
            <__p_deleted>0</__p_deleted>
            <__p_explicit>0</__p_explicit>
            <__p_final>0</__p_final>
            <__p_invokable>0</__p_invokable>
            <__p_name>main</__p_name>
            <__p_noexcept>0</__p_noexcept>
            <__p_override>0</__p_override>
            <__p_returnType>int</__p_returnType>
            <__p_static>0</__p_static>
            <__p_virtual>0</__p_virtual>
            <Variable>
                <__p_name>argc</__p_name>
                <__p_type>int</__p_type>
            </Variable>
            <Variable>
                <__p_name>argv</__p_name>
                <__p_type>char**</__p_type>
            </Variable>
        </Function>
    </Namespace>
</srp_project>
